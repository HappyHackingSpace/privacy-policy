{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Privacy Policy Analyzer","text":"<p>Welcome to the Privacy Policy Analyzer - an AI-powered tool designed to help you understand and analyze privacy policies with ease.</p>"},{"location":"#features","title":"\ud83d\ude80 Features","text":"<ul> <li>AI-Powered Analysis: Uses advanced language models to extract key information from privacy policies</li> <li>Comprehensive Scoring: Evaluates privacy policies across multiple dimensions</li> <li>Easy Integration: Simple Python API for seamless integration into your workflow</li> <li>Web Scraping: Automatically extracts privacy policy content from websites</li> <li>Caching: Intelligent caching system for improved performance</li> </ul>"},{"location":"#what-it-does","title":"\ud83c\udfaf What It Does","text":"<p>The Privacy Policy Analyzer helps you:</p> <ul> <li>Extract Key Information: Automatically identify data collection practices, sharing policies,   and user rights</li> <li>Score Privacy Policies: Get quantitative scores on various privacy aspects</li> <li>Compare Policies: Analyze multiple privacy policies side by side</li> <li>Generate Reports: Create detailed analysis reports for stakeholders</li> </ul>"},{"location":"#quick-start","title":"\ud83c\udfc3\u200d\u2642\ufe0f Quick Start","text":""},{"location":"#installation","title":"Installation","text":"<pre><code># Clone the repository\ngit clone https://github.com/HappyHackingSpace/privacy-policy-analyzer.git\ncd privacy-policy-analyzer\n\n# Using uv (recommended)\nuv sync\n\n# Or using pip\npip install -e .\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<pre><code># Analyze a homepage URL \u2014 auto-discovery will attempt to resolve a policy page\npython -m src.main --url \"https://example.com\"\n\n# Analyze a known policy URL directly\npython -m src.main --url \"https://example.com/privacy-policy\" --no-discover\n</code></pre>"},{"location":"#analysis-dimensions","title":"\ud83d\udcca Analysis Dimensions","text":"<p>The analyzer evaluates privacy policies across ten key dimensions. Each dimension is scored on a 0\u201310 scale, then combined with weights to produce a final 0\u2013100 overall score.</p> <ul> <li>Lawful Basis &amp; Purpose: Whether the policy explains clear purposes for processing and, where relevant, the legal basis or justification.  </li> <li>Collection &amp; Minimization: How clearly the policy describes the types of data collected and whether collection is limited to what is necessary.  </li> <li>Secondary Use &amp; Limits: Whether the policy restricts or explains additional uses beyond the original purpose.  </li> <li>Retention &amp; Deletion: Clarity on how long data is kept, deletion practices, or criteria for determining retention.  </li> <li>Third Parties &amp; Processors: Disclosure of processors, vendors, or third parties with whom data is shared, and their roles.  </li> <li>Cross-Border Transfers: Information on transfers outside the user\u2019s country/region and safeguards in place.  </li> <li>User Rights &amp; Redress: How users can exercise rights such as access, correction, deletion, or complaint, and available escalation channels.  </li> <li>Security &amp; Breach: Security measures described and any statements about breach notification or handling.  </li> <li>Transparency &amp; Notice: Overall clarity, structure, contact details, and how users are informed of updates or changes.  </li> <li>Sensitive Data, Children, Ads &amp; Profiling: How sensitive categories are handled, rules for children\u2019s data, use of data for advertising, and automated decision-making/profiling.</li> </ul>"},{"location":"#advanced-features","title":"\ud83d\udd27 Advanced Features","text":"<ul> <li>Flexible Fetching: Choose between <code>auto</code>, <code>http</code>, or <code>selenium</code> modes.  </li> <li>Configurable Chunking: Control <code>--chunk-size</code>, <code>--chunk-overlap</code>, and <code>--max-chunks</code> for long policies.  </li> <li>Multiple Report Levels: Select <code>summary</code>, <code>detailed</code>, or <code>full</code> output.  </li> <li>Model Override: Use <code>--model</code> or the <code>OPENAI_MODEL</code> environment variable to select your OpenAI model.  </li> </ul>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>User Guide - Complete guide to using the analyzer</li> <li>API Reference - Detailed API documentation</li> <li>Contributing - How to contribute to the project</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions! Please see our Contributing Guide for details on how to get started.</p>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"#support","title":"\ud83c\udd98 Support","text":"<ul> <li>Issues: Report bugs or request features on GitHub Issues</li> <li>Discussions: Join our community discussions on GitHub Discussions</li> <li>Discord: Join our Happy Hacking Space Discord</li> </ul> <p>Built with \u2764\ufe0f for privacy-conscious developers and organizations</p>"},{"location":"api/","title":"API Reference","text":"<p>This project currently exposes a command-line interface (CLI) rather than a stable importable class-based API. Use the CLI to discover, extract, and evaluate privacy policies, and consume the JSON it prints to stdout.</p>"},{"location":"api/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Command</li> <li>Options</li> <li>Output Schemas</li> <li>Categories &amp; Weights</li> <li>Environment Variables</li> <li>Exit Codes</li> <li>Examples</li> </ul>"},{"location":"api/#command","title":"Command","text":"<pre><code># Using uv\nuv run python src/main.py [OPTIONS]\n\n# Or module form\npython -m src.main [OPTIONS]\n</code></pre> <p>Required: <code>--url</code> (site URL for auto-discovery or a direct privacy policy URL)</p>"},{"location":"api/#options","title":"Options","text":"<ul> <li> <p><code>--url TEXT</code>   Input URL. If it\u2019s a homepage or non-policy page, the tool will try to resolve a likely policy URL.</p> </li> <li> <p><code>--model TEXT</code>   Override the OpenAI model (defaults to <code>OPENAI_MODEL</code> or <code>gpt-4o</code>).</p> </li> <li> <p><code>--chunk-size INT</code> (default: <code>3500</code>)   Character-based chunk size for splitting long policies.</p> </li> <li> <p><code>--chunk-overlap INT</code> (default: <code>350</code>)   Overlap between chunks.</p> </li> <li> <p><code>--max-chunks INT</code> (default: <code>30</code>)   Hard cap for analyzed chunks; remaining tail chunks are merged.</p> </li> <li> <p><code>--report {summary|detailed|full}</code> (default: <code>summary</code>)   Output verbosity level.</p> </li> <li> <p><code>--fetch {auto|http|selenium}</code> (default: <code>auto</code>)   Extraction method. <code>auto</code> tries HTTP first and can fall back to Selenium.</p> </li> <li> <p><code>--no-discover</code>   Analyze the given URL as-is (skip auto-discovery).</p> </li> </ul>"},{"location":"api/#output-schemas","title":"Output Schemas","text":"<p>The CLI prints JSON to stdout.</p>"},{"location":"api/#summary","title":"<code>summary</code>","text":"<pre><code>{\n\"status\": \"ok\",\n\"url\": \"https://example.com\",\n\"resolved_url\": \"https://example.com/privacy\",\n\"model\": \"gpt-4o\",\n\"chunks\": 12,\n\"valid_chunks\": 11,\n\"overall_score\": 82.5,\n\"confidence\": 0.9,\n\"top_strengths\": [[\"user_rights_and_redress\", 8.7], [\"security_and_breach\", 8.2], [\"transparency_and_notice\", 7.9]],\n\"top_risks\": [[\"cross_border_transfers\", 5.1], [\"retention_and_deletion\", 6.0], [\"secondary_use_and_limits\", 6.2]],\n\"red_flags_count\": 2\n}\n</code></pre>"},{"location":"api/#detailed","title":"<code>detailed</code>","text":"<p>Adds: - <code>category_scores</code>: <code>{ [category]: { \"score\": number (0\u201310), \"weight\": number, \"rationale\": string } }</code> - <code>red_flags</code>: <code>string[]</code> - <code>recommendations</code>: <code>string[]</code></p>"},{"location":"api/#full","title":"<code>full</code>","text":"<p>Adds: - <code>chunks</code>: raw per-chunk model outputs (including per-chunk <code>scores</code>, <code>rationales</code>, and optional <code>red_flags</code>/<code>notes</code>)</p>"},{"location":"api/#categories-weights","title":"Categories &amp; Weights","text":"<p>Each category is scored 0\u201310 per chunk by the model; scores are averaged and combined with the weights below to form the 0\u2013100 overall score.</p> <ul> <li> <p>lawful_basis_and_purpose \u2014 weight 12   Clarity of purposes/justifications; purpose limitation; consent/choice clarity where relevant.</p> </li> <li> <p>collection_and_minimization \u2014 weight 10   Specificity/necessity of collected data categories; proportionality/minimization.</p> </li> <li> <p>secondary_use_and_limits \u2014 weight 8   Limits on additional/compatible uses; avoidance of vague blanket purposes.</p> </li> <li> <p>retention_and_deletion \u2014 weight 8   Concrete periods or clear criteria; deletion/archiving language; avoiding indefinite retention without justification.</p> </li> <li> <p>third_parties_and_processors \u2014 weight 12   Processors/third parties, categories &amp; purposes, and role clarity (controller/processor/joint).</p> </li> <li> <p>cross_border_transfers \u2014 weight 8   Destinations (if any) and plain-language safeguards for international transfers.</p> </li> <li> <p>user_rights_and_redress \u2014 weight 14   How rights can be exercised (access/rectification/erasure/restriction/portability/objection), timelines, contacts, escalation paths.</p> </li> <li> <p>security_and_breach \u2014 weight 12   Organizational/technical measures; breach handling language; security/DPO contact if applicable.</p> </li> <li> <p>transparency_and_notice \u2014 weight 8   Plain language, structure, contact details, change/version notices, cookie/consent pointers where relevant.</p> </li> <li> <p>sensitive_children_ads_profiling \u2014 weight 8   Handling of sensitive/special categories; children data statements/age gates; selling/sharing for ads and opt-out/limit choices; automated decisions/profiling.</p> </li> </ul>"},{"location":"api/#environment-variables","title":"Environment Variables","text":"<ul> <li><code>OPENAI_API_KEY</code> (required)  </li> <li><code>OPENAI_MODEL</code> (optional; default model if <code>--model</code> is not set)</li> </ul>"},{"location":"api/#exit-codes","title":"Exit Codes","text":"<ul> <li><code>0</code>: success (JSON printed)  </li> <li>non-zero: error (a JSON error payload is printed where possible)</li> </ul>"},{"location":"api/#examples","title":"Examples","text":"<p>Analyze a homepage (auto-discovery):</p> <pre><code>uv run python src/main.py --url https://example.com\n</code></pre> <p>Analyze a known policy URL directly:</p> <pre><code>uv run python src/main.py --url https://example.com/privacy-policy --no-discover --report detailed\n</code></pre> <p>Force Selenium for a client-rendered page:</p> <pre><code>uv run python src/main.py --url https://example.com/privacy --fetch selenium\n</code></pre> <p>Tune chunking for very long policies:</p> <pre><code>uv run python src/main.py --url https://example.com --chunk-size 3000 --chunk-overlap 300 --max-chunks 25\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to the Privacy Policy Analyzer project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"[Unreleased]","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Auto-discovery of likely privacy policy URLs (common paths, robots/sitemaps, in-page links)</li> <li>Web content extraction via requests + BeautifulSoup; optional Trafilatura; Selenium fallback for dynamic pages</li> <li>OpenAI-powered analysis (Chat Completions) with a fixed JSON scoring schema</li> <li>Weighted scoring across ten dimensions aggregated to a 0\u2013100 overall score</li> <li>CLI (argparse) with <code>summary</code>, <code>detailed</code>, and <code>full</code> report modes</li> <li>Tunable chunking (<code>--chunk-size</code>, <code>--chunk-overlap</code>, <code>--max-chunks</code>) and fetch strategy (<code>--fetch auto|http|selenium</code>)</li> <li>Comprehensive documentation with MkDocs and Material theme</li> <li>JSON output suitable for pipelines, dashboards, or audits</li> <li>Pre-commit hooks configuration</li> <li>CI workflows (GitHub Actions) and automated release pipeline</li> <li>Project metadata and tooling via <code>pyproject.toml</code></li> <li>Integration with the Happy Hacking Space organization</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Nothing yet</li> </ul>"},{"location":"changelog/#deprecated","title":"Deprecated","text":"<ul> <li>Nothing yet</li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>Nothing yet</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Nothing yet</li> </ul>"},{"location":"changelog/#security","title":"Security","text":"<ul> <li>Nothing yet</li> </ul>"},{"location":"changelog/#legend","title":"Legend","text":"<ul> <li>Added for new features</li> <li>Changed for changes in existing functionality</li> <li>Deprecated for soon-to-be removed features</li> <li>Removed for now removed features</li> <li>Fixed for any bug fixes</li> <li>Security for vulnerability fixes</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to the Privacy Policy Analyzer! This document provides guidelines and information for contributors.</p>"},{"location":"contributing/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Getting Started</li> <li>Development Setup</li> <li>Contributing Guidelines</li> <li>Code Style</li> <li>Testing</li> <li>Documentation</li> <li>Submitting Changes</li> </ul>"},{"location":"contributing/#getting-started","title":"\ud83d\ude80 Getting Started","text":""},{"location":"contributing/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.13 or higher</li> <li>Git</li> <li>uv (recommended) or pip</li> <li>OpenAI API key (for testing)</li> </ul>"},{"location":"contributing/#fork-and-clone","title":"Fork and Clone","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally:</li> </ol> <pre><code>git clone https://github.com/your-username/privacy-policy-analyzer.git\ncd privacy-policy-analyzer\n</code></pre> <ol> <li>Add the upstream repository:</li> </ol> <pre><code>git remote add upstream https://github.com/HappyHackingSpace/privacy-policy-analyzer.git\n</code></pre>"},{"location":"contributing/#development-setup","title":"\ud83d\udd27 Development Setup","text":""},{"location":"contributing/#1-install-dependencies","title":"1. Install Dependencies","text":"<pre><code># Using uv (recommended)\nuv sync --dev\n\n# Using pip\npip install -e .\n</code></pre>"},{"location":"contributing/#2-install-pre-commit-hooks","title":"2. Install Pre-commit Hooks","text":"<pre><code>uv run pre-commit install\n</code></pre>"},{"location":"contributing/#3-set-up-environment","title":"3. Set Up Environment","text":"<pre><code># Copy environment template\ncp .env.example .env\n\n# Edit .env with your configuration\n# OPENAI_API_KEY=your-api-key-here\n# Optional:\n# OPENAI_MODEL=gpt-4o\n</code></pre>"},{"location":"contributing/#4-verify-setup","title":"4. Verify Setup","text":"<pre><code># Run tests\nuv run pytest\n\n# Run linting\nuv run ruff check\n\n# Run type checking (if configured)\nuv run mypy src/\n</code></pre>"},{"location":"contributing/#contributing-guidelines","title":"\ud83d\udcdd Contributing Guidelines","text":""},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":"<p>We welcome various types of contributions:</p> <ul> <li>Bug Reports: Report bugs and issues</li> <li>Feature Requests: Suggest new features</li> <li>Code Contributions: Fix bugs, add features</li> <li>Documentation: Improve documentation</li> <li>Testing: Add or improve tests</li> <li>Examples: Add usage examples</li> </ul>"},{"location":"contributing/#before-contributing","title":"Before Contributing","text":"<ol> <li>Check Issues: Look for existing issues or discussions</li> <li>Create Issue: For significant changes, create an issue first</li> <li>Discuss: Engage in discussions before starting work</li> <li>Fork: Fork the repository and create a feature branch</li> </ol>"},{"location":"contributing/#workflow","title":"Workflow","text":"<ol> <li>Create Branch: Create a feature branch from <code>main</code></li> </ol> <pre><code>git checkout -b feature/your-feature-name\n</code></pre> <ol> <li>Make Changes: Implement your changes</li> <li>Test: Ensure all tests pass</li> <li>Document: Update documentation if needed</li> <li>Commit: Write clear commit messages</li> <li>Push: Push your branch to your fork</li> <li>Pull Request: Create a pull request</li> </ol>"},{"location":"contributing/#code-style","title":"\ud83c\udfa8 Code Style","text":""},{"location":"contributing/#python-style","title":"Python Style","text":"<p>We follow PEP 8 with some modifications:</p> <ul> <li>Line Length: 88 characters (Black default)</li> <li>Import Sorting: isort with Black profile</li> <li>Type Hints: Required for all functions and methods</li> <li>Docstrings: Google style docstrings</li> </ul>"},{"location":"contributing/#formatting","title":"Formatting","text":"<p>We use automated formatting tools:</p> <pre><code># Format code (choose either)\nuv run black src/ tests/\nuv run isort src/ tests/\n\n# Or run both\nuv run ruff format src/ tests/\n</code></pre>"},{"location":"contributing/#linting","title":"Linting","text":"<pre><code># Check code quality\nuv run ruff check src/ tests/\n\n# Fix auto-fixable issues\nuv run ruff check --fix src/ tests/\n</code></pre>"},{"location":"contributing/#type-checking","title":"Type Checking","text":"<pre><code># Run type checker (if configured)\nuv run mypy src/\n</code></pre>"},{"location":"contributing/#testing","title":"\ud83e\uddea Testing","text":""},{"location":"contributing/#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\nuv run pytest\n\n# Run with coverage\nuv run pytest --cov=src --cov-report=html\n\n# Run specific test file\nuv run pytest tests/test_analyzer.py\n\n# Run with verbose output\nuv run pytest -v\n</code></pre>"},{"location":"contributing/#writing-tests","title":"Writing Tests","text":"<ul> <li>Test Files: Place tests in <code>tests/</code> directory</li> <li>Naming: Test files should start with <code>test_</code></li> <li>Functions: Test functions should start with <code>test_</code></li> <li>Fixtures: Use pytest fixtures for common setup</li> <li>Coverage: Aim for high test coverage</li> </ul>"},{"location":"contributing/#example-unit-test-project-realistic","title":"Example Unit Test (project-realistic)","text":"<pre><code>import pytest\nfrom src.analyzer.scoring import aggregate_chunk_results\n\nALL_CATEGORIES = [\n    \"lawful_basis_and_purpose\",\n    \"collection_and_minimization\",\n    \"secondary_use_and_limits\",\n    \"retention_and_deletion\",\n    \"third_parties_and_processors\",\n    \"cross_border_transfers\",\n    \"user_rights_and_redress\",\n    \"security_and_breach\",\n    \"transparency_and_notice\",\n    \"sensitive_children_ads_profiling\",\n]\n\ndef test_aggregate_chunk_results_basic():\n    # Minimal valid per-chunk payload matching the prompt schema (0\u201310 per category)\n    scores = {k: 7 for k in ALL_CATEGORIES}\n    rationales = {k: \"ok\" for k in ALL_CATEGORIES}\n    chunk_json_list = [{\n        \"scores\": scores,\n        \"rationales\": rationales,\n        \"red_flags\": [],\n        \"notes\": [],\n    }]\n\n    agg = aggregate_chunk_results(chunk_json_list)\n    assert 0 &lt;= agg[\"overall_score\"] &lt;= 100\n    assert \"category_scores\" in agg and isinstance(agg[\"category_scores\"], dict)\n    assert 0 &lt;= agg[\"confidence\"] &lt;= 1\n</code></pre>"},{"location":"contributing/#documentation","title":"\ud83d\udcda Documentation","text":""},{"location":"contributing/#code-documentation","title":"Code Documentation","text":"<ul> <li>Docstrings: All public functions and classes need docstrings</li> <li>Type Hints: Use type hints for all parameters and return values</li> <li>Comments: Add comments for complex logic</li> </ul>"},{"location":"contributing/#example-docstring-for-an-existing-function","title":"Example Docstring (for an existing function)","text":"<pre><code>from typing import Optional, Tuple\n\ndef resolve_privacy_url(input_url: str) -&gt; Tuple[str, Optional[str]]:\n    \"\"\"Resolve a likely privacy policy URL starting from any given page.\n\n    The function checks common policy paths, verifies candidates with a lightweight\n    content probe, inspects robots.txt and sitemaps, and finally scans in-page links\n    for privacy-related anchors.\n\n    Args:\n        input_url: A site page or a direct policy URL.\n\n    Returns:\n        A tuple (resolved_url, original_input_if_discovery_used).\n        If discovery is skipped or unnecessary, the second item may be None.\n    \"\"\"\n    ...\n</code></pre>"},{"location":"contributing/#documentation-updates","title":"Documentation Updates","text":"<p>When adding features or changing behavior:</p> <ol> <li>Update Docstrings: Update relevant docstrings</li> <li>Update README: Update README if needed</li> <li>Update User Guide: Update user guide for new features</li> <li>Update API Docs: Update CLI reference as needed</li> <li>Add Examples: Add usage examples</li> </ol>"},{"location":"contributing/#submitting-changes","title":"\ud83d\udd04 Submitting Changes","text":""},{"location":"contributing/#commit-messages","title":"Commit Messages","text":"<p>Use clear, descriptive commit messages:</p> <pre><code>feat: add batch analysis functionality\n\n- Add analyze_batch method to PrivacyPolicyAnalyzer\n- Add progress callback support\n- Add concurrent processing with configurable limits\n- Update documentation and examples\n\nCloses #123\n</code></pre>"},{"location":"contributing/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Title: Use clear, descriptive title</li> <li>Description: Provide detailed description</li> <li>Reference Issues: Link to related issues</li> <li>Screenshots: Include screenshots for UI changes</li> <li>Testing: Mention testing done</li> <li>Breaking Changes: Note any breaking changes</li> </ol>"},{"location":"contributing/#pull-request-template","title":"Pull Request Template","text":"<pre><code>## Description\nBrief description of changes\n\n## Type of Change\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n\n## Testing\n- [ ] Tests pass locally\n- [ ] New tests added\n- [ ] Manual testing completed\n\n## Checklist\n- [ ] Code follows style guidelines\n- [ ] Self-review completed\n- [ ] Documentation updated\n- [ ] No breaking changes (or documented)\n\n## Related Issues\nCloses #123\n</code></pre>"},{"location":"contributing/#release-process","title":"\ud83c\udff7\ufe0f Release Process","text":""},{"location":"contributing/#version-bumping","title":"Version Bumping","text":"<p>We use semantic versioning (MAJOR.MINOR.PATCH):</p> <ul> <li>MAJOR: Breaking changes</li> <li>MINOR: New features (backward compatible)</li> <li>PATCH: Bug fixes (backward compatible)</li> </ul>"},{"location":"contributing/#changelog","title":"Changelog","text":"<p>Update <code>CHANGELOG.md</code> with:</p> <ul> <li>Added: New features</li> <li>Changed: Changes to existing functionality</li> <li>Deprecated: Soon-to-be removed features</li> <li>Removed: Removed features</li> <li>Fixed: Bug fixes</li> <li>Security: Security improvements</li> </ul>"},{"location":"contributing/#community-guidelines","title":"\ud83e\udd1d Community Guidelines","text":""},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<ul> <li>Be respectful and inclusive</li> <li>Welcome newcomers</li> <li>Focus on constructive feedback</li> <li>Help others learn and grow</li> </ul>"},{"location":"contributing/#getting-help","title":"Getting Help","text":"<ul> <li>GitHub Discussions: For questions and discussions</li> <li>GitHub Issues: For bug reports and feature requests</li> <li>Email: Contact maintainers directly</li> <li>Discord: Join our community Discord</li> </ul>"},{"location":"contributing/#recognition","title":"Recognition","text":"<p>Contributors will be recognized in:</p> <ul> <li>CONTRIBUTORS.md: List of all contributors</li> <li>Release Notes: Mentioned in release notes</li> <li>GitHub: Listed as contributors</li> </ul>"},{"location":"contributing/#contact","title":"\ud83d\udcde Contact","text":"<ul> <li>Organization: Happy Hacking Space</li> <li>Repository: @HappyHackingSpace/privacy-policy-analyzer</li> <li>Discord: Join our server</li> </ul> <p>Thank you for contributing to the Privacy Policy Analyzer! \ud83c\udf89</p>"},{"location":"user-guide/","title":"User Guide","text":"<p>This guide explains how to install, run, and interpret results from Privacy Policy Analyzer. The tool is currently CLI-first (no stable class-based API).</p>"},{"location":"user-guide/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Installation</li> <li>Basic Usage</li> <li>Configuration</li> <li>Analysis Methods</li> <li>Understanding Results</li> <li>Advanced Features</li> <li>Troubleshooting</li> <li>Examples</li> <li>Getting Help</li> </ul>"},{"location":"user-guide/#installation","title":"\ud83d\ude80 Installation","text":""},{"location":"user-guide/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.13+  </li> <li>An OpenAI API key available in your environment (or <code>.env</code>)  </li> <li>Google Chrome (required only if you plan to use Selenium fallback)  </li> <li>Optional: <code>trafilatura</code> for enhanced extraction</li> </ul>"},{"location":"user-guide/#using-uv-recommended","title":"Using uv (recommended)","text":"<pre><code>git clone https://github.com/HappyHackingSpace/privacy-policy-analyzer.git\ncd privacy-policy-analyzer\nuv sync\n# optional: activate .venv if you prefer a shell-activated workflow\n# macOS/Linux: source .venv/bin/activate\n# Windows: .venv\\Scripts\\activate\n</code></pre>"},{"location":"user-guide/#using-poetry","title":"Using Poetry","text":"<pre><code>git clone https://github.com/HappyHackingSpace/privacy-policy-analyzer.git\ncd privacy-policy-analyzer\npoetry install\n# run commands with: poetry run &lt;command&gt;\n</code></pre>"},{"location":"user-guide/#using-pip","title":"Using pip","text":"<pre><code>git clone https://github.com/HappyHackingSpace/privacy-policy-analyzer.git\ncd privacy-policy-analyzer\npython -m venv .venv\n# macOS/Linux:\nsource .venv/bin/activate\n# Windows:\n.venv\\Scripts\\activate\npip install -e .\n</code></pre> <p>Create a <code>.env</code> file if desired:</p> <p>Verify that your API key is visible to the process:</p> <pre><code>python -c \"import os; print('API key set:', bool(os.getenv('OPENAI_API_KEY')))\"\n</code></pre>"},{"location":"user-guide/#basic-usage","title":"\ud83d\udd27 Basic Usage","text":"<p>Run the CLI with a site URL (auto-discovery will try to resolve a likely privacy policy page):</p> <pre><code># uv\nuv run python src/main.py --url https://example.com\n# or module form\npython -m src.main --url https://example.com\n</code></pre> <p>Analyze a known policy URL directly (skip auto-discovery):</p> <pre><code>uv run python src/main.py --url https://example.com/privacy-policy --no-discover\n</code></pre> <p>Choose a fetch method:</p> <pre><code>uv run python src/main.py --url https://example.com/privacy --fetch selenium\n</code></pre> <p>Control output detail:</p> <pre><code>uv run python src/main.py --url https://example.com --report detailed\n</code></pre>"},{"location":"user-guide/#configuration","title":"\u2699\ufe0f Configuration","text":""},{"location":"user-guide/#environment-variables","title":"Environment Variables","text":"<p>You can configure the model and environment via variables or flags.</p> <ul> <li>Required</li> <li> <p><code>OPENAI_API_KEY</code>: your OpenAI key</p> </li> <li> <p>Optional</p> </li> <li><code>OPENAI_MODEL</code>: default model if <code>--model</code> is not provided (defaults to <code>gpt-4o</code>)</li> </ul> <p>CLI flags that control analysis:</p> <ul> <li> <p><code>--model TEXT</code>   Override the OpenAI model for this run.</p> </li> <li> <p><code>--report {summary|detailed|full}</code>   Select output verbosity.  </p> </li> <li><code>summary</code>: overall score, confidence, top strengths/risks, red-flag count  </li> <li><code>detailed</code>: includes per-category details, red flags, recommendations  </li> <li> <p><code>full</code>: includes raw per-chunk results</p> </li> <li> <p><code>--chunk-size INT</code>, <code>--chunk-overlap INT</code>, <code>--max-chunks INT</code>   Tune chunking for very long policies (tail chunks may be merged when <code>--max-chunks</code> is exceeded).</p> </li> <li> <p><code>--fetch {auto|http|selenium}</code>   Extraction mode (auto uses HTTP first and can fall back to Selenium).</p> </li> <li> <p><code>--no-discover</code>   Analyze the provided URL as-is (no policy URL resolution).</p> </li> </ul>"},{"location":"user-guide/#analysis-methods","title":"\ud83d\udd0d Analysis Methods","text":"<ul> <li> <p>URL analysis with auto-discovery   Provide a site homepage or any page; the tool attempts to find a likely policy path (e.g., <code>/privacy</code>, <code>/privacy-policy</code>, robots/sitemap hints, or in-page links).</p> </li> <li> <p>Direct policy URL   If you already know the exact policy page, use <code>--no-discover</code> to skip discovery.</p> </li> <li> <p>Extraction   Content is fetched via HTTP/BeautifulSoup by default, optionally through Trafilatura when available, and can fall back to Selenium for client-rendered pages.</p> </li> <li> <p>Chunking &amp; scoring   Extracted text is split into overlapping chunks; each chunk is scored by the model with a fixed schema. Category scores (each 0\u201310) are aggregated with weights into a 0\u2013100 overall score.</p> </li> </ul>"},{"location":"user-guide/#understanding-results","title":"\ud83d\udcca Understanding Results","text":"<p>The CLI prints JSON to stdout.</p> <p>Common fields:</p> <ul> <li><code>status</code>: <code>\"ok\"</code> or <code>\"error\"</code></li> <li><code>url</code>: the input URL you provided</li> <li><code>resolved_url</code>: the discovered/verified policy URL (if discovery was used)</li> <li><code>model</code>: OpenAI model used (e.g., <code>gpt-4o</code>)</li> <li><code>chunks</code> / <code>valid_chunks</code>: number of chunks analyzed and number that produced valid scores</li> <li><code>overall_score</code>: weighted 0\u2013100 score across all categories</li> <li><code>confidence</code>: coverage ratio (0\u20131), based on how many categories received valid scores</li> <li><code>category_scores</code>: per-category <code>{score (0\u201310), weight, rationale}</code></li> <li><code>top_strengths</code> / <code>top_risks</code>: strongest/weakest categories</li> <li><code>red_flags</code>: unique risk indicators extracted from chunk results</li> <li><code>recommendations</code>: short, actionable notes</li> <li>(<code>full</code> only) <code>chunks</code>: raw per-chunk outputs</li> </ul>"},{"location":"user-guide/#dimensions-what-they-mean","title":"Dimensions (what they mean)","text":"<p>Each dimension is scored 0\u201310; weights are applied to compute the overall score:</p> <ul> <li>Lawful Basis &amp; Purpose: Whether the policy explains clear purposes for processing and, where relevant, the legal basis or justification.  </li> <li>Collection &amp; Minimization: How clearly the policy describes the types of data collected and whether collection is limited to what is necessary.  </li> <li>Secondary Use &amp; Limits: Whether the policy restricts or explains additional uses beyond the original purpose.  </li> <li>Retention &amp; Deletion: Clarity on how long data is kept, deletion practices, or criteria for determining retention.  </li> <li>Third Parties &amp; Processors: Disclosure of processors, vendors, or third parties with whom data is shared, and their roles.  </li> <li>Cross-Border Transfers: Information on transfers outside the user\u2019s country/region and safeguards in place.  </li> <li>User Rights &amp; Redress: How users can exercise rights such as access, correction, deletion, or complaint, and available escalation channels.  </li> <li>Security &amp; Breach: Security measures described and any statements about breach notification or handling.  </li> <li>Transparency &amp; Notice: Overall clarity, structure, contact details, and how users are informed of updates or changes.  </li> <li>Sensitive Data, Children, Ads &amp; Profiling: How sensitive categories are handled, rules for children\u2019s data, use of data for advertising, and automated decision-making/profiling.</li> </ul>"},{"location":"user-guide/#advanced-features","title":"\ud83d\ude80 Advanced Features","text":"<ul> <li>Flexible fetching with <code>--fetch auto|http|selenium</code> </li> <li>Configurable chunking via <code>--chunk-size</code>, <code>--chunk-overlap</code>, <code>--max-chunks</code> </li> <li>Report levels with <code>--report summary|detailed|full</code> </li> <li>Model override with <code>--model</code> or <code>OPENAI_MODEL</code></li> </ul> <p>Note: Caching, batch processing, CSV/HTML exports, and a stable importable Python API are not part of the current CLI release. See the roadmap in the contributing guide.</p>"},{"location":"user-guide/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":"<ul> <li> <p><code>OPENAI_API_KEY is not set</code>   Set the key in your environment or a <code>.env</code> file.</p> </li> <li> <p>Empty or insufficient text   Allow auto-discovery (avoid <code>--no-discover</code>) or provide a better URL. Some pages may require Selenium (<code>--fetch selenium</code>) to render content.</p> </li> <li> <p>Very long policies   Increase <code>--max-chunks</code>, or adjust <code>--chunk-size</code>/<code>--chunk-overlap</code>. The tool merges tail chunks to stay within limits.</p> </li> <li> <p>Model issues   Ensure the selected model supports JSON-style responses. The tool uses <code>temperature=0</code> for consistent scoring.</p> </li> </ul>"},{"location":"user-guide/#examples","title":"\ud83d\udcda Examples","text":"<p>Analyze a homepage with default settings:</p> <pre><code>uv run python src/main.py --url https://example.com\n</code></pre> <p>Analyze a known policy URL with detailed output:</p> <pre><code>uv run python src/main.py --url https://example.com/privacy-policy --no-discover --report detailed\n</code></pre> <p>Force Selenium for a client-rendered policy:</p> <pre><code>uv run python src/main.py --url https://example.com/privacy --fetch selenium\n</code></pre> <p>Tune chunking for very long policies:</p> <pre><code>uv run python src/main.py --url https://example.com --chunk-size 3000 --chunk-overlap 300 --max-chunks 25\n</code></pre>"},{"location":"user-guide/#getting-help","title":"\ud83c\udd98 Getting Help","text":"<ul> <li>Documentation: Check the API Reference for detailed API documentation</li> <li>Issues: Report bugs on GitHub Issues</li> <li>Discussions: Join community discussions on GitHub Discussions</li> <li>Discord: Join our Happy Hacking Space Discord</li> </ul> <p>Happy analyzing! \ud83d\udd0d\u2728</p>"}]}